{"ast":null,"code":"var _jsxFileName = \"/Users/enki/Developer/Local (Non Version Controlled)/enkithemystik.com_social/frontend/src/components/Pages/Home.js\",\n  _s = $RefreshSig$();\nimport Layout from \"../Layout/Layout\";\nimport UserPost from \"../UserPost/UserPost\";\nimport axios, { post } from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const url = useParams();\n  function getUserPosts() {\n    axios.get('/getUserPosts').then(response => {\n      let data = response.data;\n      setPosts(data);\n      console.log(response.data);\n    });\n  }\n  useEffect(() => {\n    getUserPosts();\n  }, []); // The empty array tells React to only run the effect once (when the component mounts)\n\n  return (\n    /*#__PURE__*/\n    //Checks if posts is empty, the maps through the array of UserPosts and renders them all\n    _jsxDEV(Layout, {\n      children: posts.length > 0 ? posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(UserPost, {\n          handle: post.user_handle,\n          username: post.user_name,\n          date: post.post_date,\n          content: post.post_content,\n          comments: post.comment_count,\n          likes: post.likes\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Home, \"xKnolCO4gGcJnn+pWurOYnMrqbw=\", false, function () {\n  return [useParams];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Layout","UserPost","axios","post","useParams","useEffect","useState","Home","posts","setPosts","url","getUserPosts","get","then","response","data","console","log","length","map","index","user_handle","user_name","post_date","post_content","comment_count","likes","id"],"sources":["/Users/enki/Developer/Local (Non Version Controlled)/enkithemystik.com_social/frontend/src/components/Pages/Home.js"],"sourcesContent":["import Layout from \"../Layout/Layout\";\nimport UserPost from \"../UserPost/UserPost\";\n\nimport axios, {post} from \"axios\";\nimport {useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\n\nconst Home = () => {\n    const [posts, setPosts] = useState([]);\n    const url = useParams();\n\n    function  getUserPosts() {\n        axios.get('/getUserPosts').then((response) => {\n            let data = response.data;\n            setPosts(data);\n            console.log(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getUserPosts();\n    }, []); // The empty array tells React to only run the effect once (when the component mounts)\n\n    return (\n        //Checks if posts is empty, the maps through the array of UserPosts and renders them all\n        <Layout>\n            {posts.length > 0 ? (\n                posts.map((post, index) => {\n                    return (\n                        <UserPost\n                            key={post.id}\n                            handle={post.user_handle}\n                            username={post.user_name}\n                            date={post.post_date}\n                            content={post.post_content}\n                            comments={post.comment_count}\n                            likes={post.likes}\n                        />\n                    );\n                })\n            ) : (\n                <div>Loading...</div>\n            )}\n\n        </Layout>\n\n    )\n}\n\nexport default Home;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,OAAOC,KAAK,IAAGC,IAAI,QAAO,OAAO;AACjC,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAE1C,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMI,GAAG,GAAGN,SAAS,EAAE;EAEvB,SAAUO,YAAY,GAAG;IACrBT,KAAK,CAACU,GAAG,CAAC,eAAe,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC1C,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MACxBN,QAAQ,CAACM,IAAI,CAAC;MACdC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC;EACN;EAEAV,SAAS,CAAC,MAAM;IACZM,YAAY,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;IAAA;IACI;IACA,QAAC,MAAM;MAAA,UACFH,KAAK,CAACU,MAAM,GAAG,CAAC,GACbV,KAAK,CAACW,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,KAAK;QACvB,oBACI,QAAC,QAAQ;UAEL,MAAM,EAAEjB,IAAI,CAACkB,WAAY;UACzB,QAAQ,EAAElB,IAAI,CAACmB,SAAU;UACzB,IAAI,EAAEnB,IAAI,CAACoB,SAAU;UACrB,OAAO,EAAEpB,IAAI,CAACqB,YAAa;UAC3B,QAAQ,EAAErB,IAAI,CAACsB,aAAc;UAC7B,KAAK,EAAEtB,IAAI,CAACuB;QAAM,GANbvB,IAAI,CAACwB,EAAE;UAAA;UAAA;UAAA;QAAA,QAOd;MAEV,CAAC,CAAC,gBAEF;QAAA,UAAK;MAAU;QAAA;QAAA;QAAA;MAAA;IAClB;MAAA;MAAA;MAAA;IAAA;EAEI;AAGjB,CAAC;AAAA,GAxCKpB,IAAI;EAAA,QAEMH,SAAS;AAAA;AAAA,KAFnBG,IAAI;AA0CV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}